V: '1.0.1'

В главной директории проекта, рядом с docker-compose файлом должнен
лежать файл с переменными .env , пример переменных в .env.example.

Для запуска сервера:
Создать файл .env в корне проекта, на уровне с docker-compose файлом.
Скопировать в него все переменные из .env.example:
API_GATEWAY_PORT - внешний порт для работы с сервером. По умолчанию 5000.

Запустить докер для инициализации базы данных:
находясь в корневой директории проекта docker compose up
Дождаться когда инициализируется база данных, может занять некоторое время.

После того как создадутся базы данных остановить докер ctrl + c
Зайти в файл docker-compose и раскоментировать все остальные сервисы, после чего
снова запустить докер:
docker compose up

**Иногда после первого запроса вы поулчите "Internal server error",
просто повторите попытку запроса в таком случае **
Рабочие эндпоинты:

/api/movies - get - Получить все фильмы.
Пагинация: movies?size=10 - Устанавливает отображаемый лимит.
Для дальнейшего переключения по страницам:
movies?size=10&page=1 - это начало второй страницы.
Для поиска фильма по любому из полей:
movies?field=nameRu&value=голуби - Будет искать в поле nameRu голуби.
Так же будет работать и с пагинацией:
movies?size=10&page=1&field=nameRu&value=голуби.
Регистр не важен!

/api/movies/id - get - id динамический id фильма.
Выдаст всю информацию о фильме по его айди. Жанры, актеры, страны и т.д.


Структура проекта:
Главный модуль 'api', - это сервер, в нем содержатся все эндпоинты.
Глобальный префикс '/api'.
В директории контроллеров отдельный файл контроллеров под каждый сервис.

В процессе разработки инструкции будут меняться, с каждым внесенным изменением в этот файл
в поле V - версия пишем изменения что бы следить за ходом изменений.
первая цифра - глобальное изменение структуры проекта.
вторая цифра - меняется когда будет полностью готов капсулированный модуль
третья цифра - мелкие правки и изменения.

Создание БД юзерс.