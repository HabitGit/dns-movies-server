V: '1.0.1'

Рабочие эндпоинты:

/api/movies - get - Получить все фильмы.
Пагинация: movies?page=0&size=10 - Устанавливает отображаемый лимит.
Для поиска фильма по русскому названию:
movies?name=голуби - Будет искать в поле nameRu голуби.
Так же будет работать и с пагинацией:
movies?size=10&page=1&field=nameRu&value=голуби.
Регистр не важен!

/api/movies/about/:id - get - id динамический id фильма.
Выдаст всю информацию о фильме по его айди. Жанры, актеры, страны и т.д.

Добавлены накопительные фильтры для страницы каталога:
    Работают по эндпоинту /api/movies/filters
    Фильтр поддерживает пагинацию:
        page=0 - страница;
        size=0 - размер списка;
    Параметры для фильтра:
    year=2000 - Год;
    type=value - Тип где value имеет следующие значения: (
                                                        сериал=TV_SERIES;
                                                        фильм=FILM;
                                                        Пример: type=FILM;
                                                        )
    ratingKinopoisk=6.1 - Рейтинг кинопоиска. Показывает больше или равно;
    ratingKinopoiskVoteCount=999999 - Количество оценок на кинопоике. Больше или равно;
    genreId=1 - Указывается айди жанра. Накопительный параметр.
    countryId=1 - Накопительный параметр.
    Примеры:
        filters?page=0&size=10&genreId=1&genreId=2&countryId=1&year=2000 -
        - Отобразит режим пагинации с 0 страницей, ограничением 10 фильмов,
        где айди жанра 1 ИЛИ 2, **обратите внимание что не И а ИЛИ!**
        айди страны 1, год 2000.
    **Накопительные фильтры - значит что их может быть несколько, к примеру жанры,
    их может быть одновременно хоть 10, оператор между ними ИЛИ.

Добавлен эндпоинт получить список всех жанров:
    /api/movies/genres
Добавлен эндпоинт получить список всех стран:
    /api/movies/countries
Добавлен эндпоинт получить всех актеров к фильму:
    /api/movies/about/:id/staff
Добавлен эндпоинт получить список всех персон:
    /api/persons
    Так же поддерживает пагинацию
    persons?page=0&size=10
Добавлен эндпоинт получения информации о персоне по id:
    /api/persons/about/:id


Структура проекта:
Главный модуль 'api', - это сервер, в нем содержатся все эндпоинты.
Глобальный префикс '/api'.
В директории контроллеров отдельный файл контроллеров под каждый сервис.

В процессе разработки инструкции будут меняться, с каждым внесенным изменением в этот файл
в поле V - версия пишем изменения что бы следить за ходом изменений.
первая цифра - глобальное изменение структуры проекта.
вторая цифра - меняется когда будет полностью готов капсулированный модуль
третья цифра - мелкие правки и изменения.

REACT_APP_CLIENT_ID=51619671

//https://github.com/ndrwbv/vk-auth-react-nestjs
авторизация через вк сделана по данному примеру
Создание БД юзерс.


# Тесты

Для запуска юнит тестов в модуле:
    - Зайти в каталог сервиса, который хотите протестировать (докер запускать не нужно)
    - Запустить команду `npm run test`

Для запуска e2e тестов:
    - Запустить тестовый стенд из корневой директории проекта `docker compose -f docker-compose-test.yml'
    - Зайти в корневую папку сервиса api
    - Запустить команду `npm run test:e2e`
