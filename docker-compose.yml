version: '3.8'

services:

  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: always
    profiles:
      - dev
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT_OUTSIDE}:${POSTGRES_PORT_INSIDE}

  postgres_test:
    container_name: postgres-test
    image: postgres:15.2
    restart: always
    profiles:
      - test
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    hostname: postgres
    volumes:
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT_OUTSIDE}:${POSTGRES_PORT_INSIDE}

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    hostname: rabbitmq
    restart: always
    env_file:
      - .env
    ports:
      - ${RABBITMQ_PORT_OUTSIDE}:${RABBITMQ_PORT_INSIDE}

  auth:
    container_name: auth
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  social:
    container_name: social
    build:
      context: ./
      dockerfile: ./apps/social/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/app
      - /app/node_modules

  persons:
    container_name: persons
    build:
      context: ./
      dockerfile: ./apps/persons/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  movies:
    container_name: movies
    build:
      context: ./
      dockerfile: ./apps/movies/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  api:
    container_name: api
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules
